{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SCALLOP-Seq meta-analysis Consortium contacts Arthur Gilly Grace Png Young-Chan Park Slack channel https://scallop-seq.slack.com URLs https://github.com/hmgu-itg/burden_testing https://sites.google.com/site/jpopgen/dbNSFP https://sites.google.com/site/jpopgen/wgsa http://web.corral.tacc.utexas.edu/WGSAdownload/resources/precomputed_hg38/ http://www.columbia.edu/~ii2135/Eigen_functions_112015.R","title":"General information"},{"location":"#scallop-seq-meta-analysis","text":"","title":"SCALLOP-Seq meta-analysis"},{"location":"#consortium-contacts","text":"Arthur Gilly Grace Png Young-Chan Park","title":"Consortium contacts"},{"location":"#slack-channel","text":"https://scallop-seq.slack.com","title":"Slack channel"},{"location":"#urls","text":"https://github.com/hmgu-itg/burden_testing https://sites.google.com/site/jpopgen/dbNSFP https://sites.google.com/site/jpopgen/wgsa http://web.corral.tacc.utexas.edu/WGSAdownload/resources/precomputed_hg38/ http://www.columbia.edu/~ii2135/Eigen_functions_112015.R","title":"URLs"},{"location":"INTERVAL/","text":"INTERVAL analysis Programs Sequence Filename Description 1 weswgs.sh WES/WGS preprocessing 2.1 spa.sh Single-point analysis 2.2 rva.sh Rare-variant analysis The hierachy of the scripts is as follows, graph TB; setup ==> 1; 1 ==> 2; 1 --> idmap.do; 1 --> wgs.wrap; 2 --> 2.1; 2.1 --> spa.sb; 2.1 --> bgen.sb; 2 --> 2.2; 2.2 --> wes.R; 2.2 --> wgs.R; 2.2 --> weswgs.R; 2.2 --> rva.sb; 2.2 --> prune.wrap; Variant lists and results INTERVAL variant lists and results submitted centrally are detailed below.. Variant lists as of 11/11/2020 The following two files were also uploaded. INTERVAL-wes.variantlist.gz INTERVAL-wgs.variantlist.gz for WES and WGS, respectively. Variant lists as of 10/11/2020 A combination of WES+WGS when there were samples with cvd2/cvd3/inf/neu measurements. To find out which variants were exclusively from WES, we do gunzip -c INTERVAL-wes+wgs.variantlist.gz | awk '$6<2000' | wc -l giving 636,046 out of 116,133,865. Variant lists as of 09/11/2020 The data contains both WES and WGS genotypes -- the sample overlap was only five in the four Olink panels. It is expected that there will be very minor changes with additional work on sample/genotype QC. Multiple linear regressions (+20 PCs as covariates) They replaced mixed models for 122 proteins + WES and inf1_IL.17A__Q16552 + WGS. cvd2_ANG.1__Q15389 cvd2_ADAM.TS13__Q76LX8 cvd2_Protein.BOC__Q9BWV1 cvd2_IL.4RA__P24394 cvd2_STK4__Q13043 cvd2_PAR.1__P25116 cvd2_TF__P13726 cvd2_IL1RL2__Q9HB29 cvd2_PDGF.subunit.B__P01127 cvd2_CXCL1__P09341 cvd2_GIF__P27352 cvd2_PIgR__P01833 cvd2_SOD2__P04179 cvd2_FGF.23__Q9GZV9 cvd2_GH__P01241 cvd2_GLO1__Q04760 cvd2_CD84__Q9UIB8 cvd2_PAPPA__Q13219 cvd2_REN__P00797 cvd2_THBS2__P35442 cvd2_XCL1__P47992 cvd2_SORT1__Q99523 cvd2_CCL17__Q92583 cvd2_MMP.7__P09237 cvd2_ITGB1BP2__Q9UKP3 cvd2_Dkk.1__O94907 cvd2_LPL__P06858 cvd2_THPO__P40225 cvd2_BNP__P16860 cvd2_MMP.12__P39900 cvd2_hOSCAR__Q8IYS5 cvd2_TGM2__P21980 cvd2_CA5A__P35218 cvd2_HSP.27__P04792 cvd2_PARP.1__P09874 cvd2_HAOX1__Q9UJM8 cvd3_TNFRSF14__Q92956 cvd3_ITGB2__P05107 cvd3_IL.17RA__Q96F46 cvd3_OPG__O00300 cvd3_SELP__P16109 cvd3_BLM.hydrolase__Q13867 cvd3_PLC__P98160 cvd3_LTBR__P36941 cvd3_Notch.3__Q9UM47 cvd3_PAI__P05121 cvd3_CCL24__O00175 cvd3_SELE__P16581 cvd3_AZU1__P20160 cvd3_IL.6RA__P08887 cvd3_RETN__Q9HD89 cvd3_FAS__P25445 cvd3_MB__P02144 cvd3_OPN__P10451 cvd3_CTSD__P07339 cvd3_Gal.4__P56470 cvd3_CASP.3__P42574 cvd3_CPB1__P15086 cvd3_CHI3L1__P36222 cvd3_ST2__Q01638 cvd3_CTSZ__Q9UBR2 cvd3_MMP.3__P08254 cvd3_PDGF.subunit.A__P04085 cvd3_PECAM.1__P16284 cvd3_NT.pro.BNP__NA inf1_MCP.3__P80098 inf1_CD244__Q9BZW8 inf1_IL.7__P13232 inf1_IL.17A__Q16552 inf1_CXCL11__O14625 inf1_AXIN1__O15169 inf1_IL.20RA__Q9UHF4 inf1_CST5__P28325 inf1_CXCL1__P09341 inf1_CCL4__P13236 inf1_CD6__Q8WWJ7 inf1_MCP.4__Q99616 inf1_CCL11__P51671 inf1_TNFSF14__O43557 inf1_FGF.23__Q9GZV9 inf1_LIF.R__P42702 inf1_IL.22.RA1__Q8N6P7 inf1_Beta.NGF__P01138 inf1_IL.13__P35225 inf1_MMP.10__P09238 inf1_TNF__P01375 inf1_CD5__P06127 inf1_CXCL6__P80162 inf1_4E.BP1__Q13541 inf1_IL.20__Q9NYY1 inf1_SIRT2__Q8IXJ6 inf1_CD40__P25942 inf1_IFN.gamma__P01579 inf1_FGF.19__O95750 inf1_LIF__P15018 inf1_NRTN__Q99748 inf1_MCP.2__P80075 inf1_CCL25__O15444 inf1_NT.3__P20783 inf1_IL.5__P05113 inf1_ADA__P00813 neu_GDNF___P39905 neu_EZR___P15311 neu_NCAN___O14594 neu_PRTG___Q2VWP7 neu_PLXNB3___Q9ULL4 neu_LRPAP1___P30533 neu_CLEC1B___Q9P126 neu_ADAM23___O75077 neu_RSPO1___Q2MKA7 neu_LGALS8___O00214 neu_FLRT2___O43155 neu_CLEC10A___Q8IUN9 neu_CTSC___P53634 neu_JAM2___P57087 neu_CTSS___P25774 neu_ASAH2___Q9NR71 neu_ULBP2___Q9BZM5 neu_CD300LF___Q8TDQ1 neu_LAT___O43561 neu_NTRK3___Q16288 neu_TNR___Q92752","title":"INTERVAL"},{"location":"INTERVAL/#interval-analysis","text":"","title":"INTERVAL analysis"},{"location":"INTERVAL/#programs","text":"Sequence Filename Description 1 weswgs.sh WES/WGS preprocessing 2.1 spa.sh Single-point analysis 2.2 rva.sh Rare-variant analysis The hierachy of the scripts is as follows, graph TB; setup ==> 1; 1 ==> 2; 1 --> idmap.do; 1 --> wgs.wrap; 2 --> 2.1; 2.1 --> spa.sb; 2.1 --> bgen.sb; 2 --> 2.2; 2.2 --> wes.R; 2.2 --> wgs.R; 2.2 --> weswgs.R; 2.2 --> rva.sb; 2.2 --> prune.wrap;","title":"Programs"},{"location":"INTERVAL/#variant-lists-and-results","text":"INTERVAL variant lists and results submitted centrally are detailed below..","title":"Variant lists and results"},{"location":"INTERVAL/#variant-lists-as-of-11112020","text":"The following two files were also uploaded. INTERVAL-wes.variantlist.gz INTERVAL-wgs.variantlist.gz for WES and WGS, respectively.","title":"Variant lists as of 11/11/2020"},{"location":"INTERVAL/#variant-lists-as-of-10112020","text":"A combination of WES+WGS when there were samples with cvd2/cvd3/inf/neu measurements. To find out which variants were exclusively from WES, we do gunzip -c INTERVAL-wes+wgs.variantlist.gz | awk '$6<2000' | wc -l giving 636,046 out of 116,133,865.","title":"Variant lists as of 10/11/2020"},{"location":"INTERVAL/#variant-lists-as-of-09112020","text":"The data contains both WES and WGS genotypes -- the sample overlap was only five in the four Olink panels. It is expected that there will be very minor changes with additional work on sample/genotype QC.","title":"Variant lists as of 09/11/2020"},{"location":"INTERVAL/#multiple-linear-regressions-20-pcs-as-covariates","text":"They replaced mixed models for 122 proteins + WES and inf1_IL.17A__Q16552 + WGS. cvd2_ANG.1__Q15389 cvd2_ADAM.TS13__Q76LX8 cvd2_Protein.BOC__Q9BWV1 cvd2_IL.4RA__P24394 cvd2_STK4__Q13043 cvd2_PAR.1__P25116 cvd2_TF__P13726 cvd2_IL1RL2__Q9HB29 cvd2_PDGF.subunit.B__P01127 cvd2_CXCL1__P09341 cvd2_GIF__P27352 cvd2_PIgR__P01833 cvd2_SOD2__P04179 cvd2_FGF.23__Q9GZV9 cvd2_GH__P01241 cvd2_GLO1__Q04760 cvd2_CD84__Q9UIB8 cvd2_PAPPA__Q13219 cvd2_REN__P00797 cvd2_THBS2__P35442 cvd2_XCL1__P47992 cvd2_SORT1__Q99523 cvd2_CCL17__Q92583 cvd2_MMP.7__P09237 cvd2_ITGB1BP2__Q9UKP3 cvd2_Dkk.1__O94907 cvd2_LPL__P06858 cvd2_THPO__P40225 cvd2_BNP__P16860 cvd2_MMP.12__P39900 cvd2_hOSCAR__Q8IYS5 cvd2_TGM2__P21980 cvd2_CA5A__P35218 cvd2_HSP.27__P04792 cvd2_PARP.1__P09874 cvd2_HAOX1__Q9UJM8 cvd3_TNFRSF14__Q92956 cvd3_ITGB2__P05107 cvd3_IL.17RA__Q96F46 cvd3_OPG__O00300 cvd3_SELP__P16109 cvd3_BLM.hydrolase__Q13867 cvd3_PLC__P98160 cvd3_LTBR__P36941 cvd3_Notch.3__Q9UM47 cvd3_PAI__P05121 cvd3_CCL24__O00175 cvd3_SELE__P16581 cvd3_AZU1__P20160 cvd3_IL.6RA__P08887 cvd3_RETN__Q9HD89 cvd3_FAS__P25445 cvd3_MB__P02144 cvd3_OPN__P10451 cvd3_CTSD__P07339 cvd3_Gal.4__P56470 cvd3_CASP.3__P42574 cvd3_CPB1__P15086 cvd3_CHI3L1__P36222 cvd3_ST2__Q01638 cvd3_CTSZ__Q9UBR2 cvd3_MMP.3__P08254 cvd3_PDGF.subunit.A__P04085 cvd3_PECAM.1__P16284 cvd3_NT.pro.BNP__NA inf1_MCP.3__P80098 inf1_CD244__Q9BZW8 inf1_IL.7__P13232 inf1_IL.17A__Q16552 inf1_CXCL11__O14625 inf1_AXIN1__O15169 inf1_IL.20RA__Q9UHF4 inf1_CST5__P28325 inf1_CXCL1__P09341 inf1_CCL4__P13236 inf1_CD6__Q8WWJ7 inf1_MCP.4__Q99616 inf1_CCL11__P51671 inf1_TNFSF14__O43557 inf1_FGF.23__Q9GZV9 inf1_LIF.R__P42702 inf1_IL.22.RA1__Q8N6P7 inf1_Beta.NGF__P01138 inf1_IL.13__P35225 inf1_MMP.10__P09238 inf1_TNF__P01375 inf1_CD5__P06127 inf1_CXCL6__P80162 inf1_4E.BP1__Q13541 inf1_IL.20__Q9NYY1 inf1_SIRT2__Q8IXJ6 inf1_CD40__P25942 inf1_IFN.gamma__P01579 inf1_FGF.19__O95750 inf1_LIF__P15018 inf1_NRTN__Q99748 inf1_MCP.2__P80075 inf1_CCL25__O15444 inf1_NT.3__P20783 inf1_IL.5__P05113 inf1_ADA__P00813 neu_GDNF___P39905 neu_EZR___P15311 neu_NCAN___O14594 neu_PRTG___Q2VWP7 neu_PLXNB3___Q9ULL4 neu_LRPAP1___P30533 neu_CLEC1B___Q9P126 neu_ADAM23___O75077 neu_RSPO1___Q2MKA7 neu_LGALS8___O00214 neu_FLRT2___O43155 neu_CLEC10A___Q8IUN9 neu_CTSC___P53634 neu_JAM2___P57087 neu_CTSS___P25774 neu_ASAH2___Q9NR71 neu_ULBP2___Q9BZM5 neu_CD300LF___Q8TDQ1 neu_LAT___O43561 neu_NTRK3___Q16288 neu_TNR___Q92752","title":"Multiple linear regressions (+20 PCs as covariates)"},{"location":"NOTES/","text":"NOTES Installation singularity pull -F library://hmgu-itg/default/burden_testing:latest singularity inspect burden_testing_latest.sif | \\ grep Version singularity exec burden_testing_latest.sif help singularity exec burden_testing_latest.sif single_cohort_munge_variantlist -h singularity exec burden_testing_latest.sif prepare-regions -h singularity exec burden_testing_latest.sif make-group-file -h singularity exec --containall burden_testing_latest.sif step2 --help for the latest or :1.5.3 , see wiki instructions on installation , data and SMMAT . Debugging Additional information can be obtained with singularity exec --help . For debugging, e.g., on VCF2GDS, one can invoke the singularity shell via singularity shell --bind ${PWD} --containall --shell /usr/bin/bash burden_testing_latest.sif and the container has its own HOME directory within which ~ is recognised. The embedded call to sbatch implicates the --wait option as the succeeding steps would require its full results. The array jobs could be altered to accommodate software and model (BOLT-LMM, GCTA --fastGWA/fastGWAS-lr for mixed model/linear regression). The group filess for rare variant analysis have been provided by the central analysis team. Note that ( a ). They are whole-genome so are preferably split by chromosome. ( b ). No groupings are contained for chromosomes X and Y, so they could be dropped from the analysis. URLs Sylabs ( GitHub )","title":"NOTES"},{"location":"NOTES/#notes","text":"","title":"NOTES"},{"location":"NOTES/#installation","text":"singularity pull -F library://hmgu-itg/default/burden_testing:latest singularity inspect burden_testing_latest.sif | \\ grep Version singularity exec burden_testing_latest.sif help singularity exec burden_testing_latest.sif single_cohort_munge_variantlist -h singularity exec burden_testing_latest.sif prepare-regions -h singularity exec burden_testing_latest.sif make-group-file -h singularity exec --containall burden_testing_latest.sif step2 --help for the latest or :1.5.3 , see wiki instructions on installation , data and SMMAT .","title":"Installation"},{"location":"NOTES/#debugging","text":"Additional information can be obtained with singularity exec --help . For debugging, e.g., on VCF2GDS, one can invoke the singularity shell via singularity shell --bind ${PWD} --containall --shell /usr/bin/bash burden_testing_latest.sif and the container has its own HOME directory within which ~ is recognised. The embedded call to sbatch implicates the --wait option as the succeeding steps would require its full results. The array jobs could be altered to accommodate software and model (BOLT-LMM, GCTA --fastGWA/fastGWAS-lr for mixed model/linear regression). The group filess for rare variant analysis have been provided by the central analysis team. Note that ( a ). They are whole-genome so are preferably split by chromosome. ( b ). No groupings are contained for chromosomes X and Y, so they could be dropped from the analysis.","title":"Debugging"},{"location":"NOTES/#urls","text":"Sylabs ( GitHub )","title":"URLs"},{"location":"tests/cclake/","text":"cclake This is worth recording since it shows allocation of CPUs both in SLURM and singularity thread. Meanwhile, it may just be called directly. #!/usr/bin/bash #SBATCH --job-name=_rva #SBATCH --account=PETERS-SL3-CPU #SBATCH --partition=cclake-himem #SBATCH --cpus-per-task=30 #SBATCH --array=120-368 #SBATCH --time=12:00:00 #SBATCH --output=/rds/user/jhz22/hpc-work/work/_rva_%A_%a.o #SBATCH --error=/rds/user/jhz22/hpc-work/work/_rva_%A_%a.e #SBATCH --export ALL export TMPDIR=${HPC_WORK}/work export SEQ=~/COVID-19/SCALLOP-Seq export COHORT=INTERVAL singularity_exec() { if [ ! -d ${SEQ}/rva/${weswgs}-${pheno} ]; then mkdir -p ${SEQ}/rva/${weswgs}-${pheno}; fi singularity exec --env SEQ=${SEQ} \\ --env COHORT=${COHORT} \\ --env weswgs=${weswgs} \\ --env chr=${chr} \\ --env group_file=${group_file} \\ --env pheno=${pheno} \\ --bind ${SEQ} --workdir ${TMPDIR} \\ --containall ${SEQ}/burden_testing_latest.sif step2 \\ --cohort-name ${COHORT} \\ --GDS ${SEQ}/work/${weswgs}-${chr}.gds \\ --group-file ${SEQ}/${group_file} \\ --matrix-prefix ${SEQ}/work/${weswgs} \\ --matrix-type GCTA \\ --pheno ${SEQ}/work/${weswgs}/${pheno}-lr.pheno \\ --out ${SEQ}/rva/${weswgs}-${pheno}/${COHORT}-${weswgs}-${pheno}-${group}-${chr} \\ --threads 30 } export groups=(exon_CADD exon_reg exon_severe reg_Only) for weswgs in wgs do export pheno=$(ls ${SEQ}/work/${weswgs}/*-lr.pheno | xargs -I {} basename {} -lr.pheno | awk 'NR==ENVIRON[\"SLURM_ARRAY_TASK_ID\"]') export weswgs=${weswgs} for chrs in {1..22} do export chr=chr${chrs} for group in ${groups[@]} do export group_file=${group}-${chrs}.groupfile.txt echo ${pheno} ${weswgs} ${chr} ${group} singularity_exec done done done","title":"cclake"},{"location":"tests/cclake/#cclake","text":"This is worth recording since it shows allocation of CPUs both in SLURM and singularity thread. Meanwhile, it may just be called directly. #!/usr/bin/bash #SBATCH --job-name=_rva #SBATCH --account=PETERS-SL3-CPU #SBATCH --partition=cclake-himem #SBATCH --cpus-per-task=30 #SBATCH --array=120-368 #SBATCH --time=12:00:00 #SBATCH --output=/rds/user/jhz22/hpc-work/work/_rva_%A_%a.o #SBATCH --error=/rds/user/jhz22/hpc-work/work/_rva_%A_%a.e #SBATCH --export ALL export TMPDIR=${HPC_WORK}/work export SEQ=~/COVID-19/SCALLOP-Seq export COHORT=INTERVAL singularity_exec() { if [ ! -d ${SEQ}/rva/${weswgs}-${pheno} ]; then mkdir -p ${SEQ}/rva/${weswgs}-${pheno}; fi singularity exec --env SEQ=${SEQ} \\ --env COHORT=${COHORT} \\ --env weswgs=${weswgs} \\ --env chr=${chr} \\ --env group_file=${group_file} \\ --env pheno=${pheno} \\ --bind ${SEQ} --workdir ${TMPDIR} \\ --containall ${SEQ}/burden_testing_latest.sif step2 \\ --cohort-name ${COHORT} \\ --GDS ${SEQ}/work/${weswgs}-${chr}.gds \\ --group-file ${SEQ}/${group_file} \\ --matrix-prefix ${SEQ}/work/${weswgs} \\ --matrix-type GCTA \\ --pheno ${SEQ}/work/${weswgs}/${pheno}-lr.pheno \\ --out ${SEQ}/rva/${weswgs}-${pheno}/${COHORT}-${weswgs}-${pheno}-${group}-${chr} \\ --threads 30 } export groups=(exon_CADD exon_reg exon_severe reg_Only) for weswgs in wgs do export pheno=$(ls ${SEQ}/work/${weswgs}/*-lr.pheno | xargs -I {} basename {} -lr.pheno | awk 'NR==ENVIRON[\"SLURM_ARRAY_TASK_ID\"]') export weswgs=${weswgs} for chrs in {1..22} do export chr=chr${chrs} for group in ${groups[@]} do export group_file=${group}-${chrs}.groupfile.txt echo ${pheno} ${weswgs} ${chr} ${group} singularity_exec done done done","title":"cclake"},{"location":"tests/cmp/","text":"cmp Comparison of results is to seed from cmp.sh .","title":"cmp"},{"location":"tests/cmp/#cmp","text":"Comparison of results is to seed from cmp.sh .","title":"cmp"},{"location":"tests/looping/","text":"Looping It is a dummy for [wes, wgs] x [1-5 proteins] x [4 groups] x [1-22 chromosomes] combinations as in the rare variant analysis (rva). scripts #!/usr/bin/bash #SBATCH --job-name=_rva #SBATCH --account=PETERS-SL3-CPU #SBATCH --partition=skylake #SBATCH --cpus-per-task=2 #SBATCH --array=1-5 #SBATCH --mem=18800 #SBATCH --time=12:00:00 #SBATCH --output=/home/jhz22/_rva_%A_%a.o #SBATCH --error=/home/jhz22/_rva_%A_%a.e #SBATCH --export ALL export TMPDIR=${HPC_WORK}/work export SEQ=~/COVID-19/SCALLOP-Seq export COHORT=INTERVAL singularity_exec() { echo ${weswgs} } export groups=(exon_CADD exon_reg exon_severe reg_Only) for weswgs in wes wgs do export pheno=$(ls ${SEQ}/work/${weswgs}/*-lr.pheno | xargs -I {} basename {} -lr.pheno | awk 'NR==ENVIRON[\"SLURM_ARRAY_TASK_ID\"]') export weswgs=${weswgs} for chrs in {1..22} do export chr=chr${chrs} for group in ${groups[@]} do export group_file=${group}-${chrs}.groupfile.txt echo ${pheno} ${weswgs} ${chr} ${group} singularity_exec done done done An example list The _rva*.o files list the combinations as intended, e.g., _rva_46245269_1.o with an empty _rva_46245269_1.e . cvd2_ACE2__Q9BYF1 wes chr1 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr1 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr1 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr1 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr2 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr2 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr2 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr2 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr3 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr3 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr3 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr3 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr4 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr4 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr4 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr4 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr5 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr5 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr5 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr5 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr6 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr6 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr6 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr6 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr7 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr7 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr7 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr7 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr8 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr8 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr8 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr8 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr9 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr9 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr9 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr9 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr10 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr10 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr10 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr10 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr11 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr11 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr11 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr11 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr12 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr12 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr12 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr12 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr13 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr13 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr13 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr13 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr14 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr14 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr14 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr14 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr15 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr15 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr15 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr15 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr16 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr16 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr16 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr16 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr17 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr17 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr17 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr17 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr18 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr18 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr18 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr18 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr19 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr19 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr19 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr19 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr20 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr20 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr20 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr20 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr21 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr21 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr21 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr21 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr22 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr22 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr22 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr22 reg_Only wes cvd2_ACE2__Q9BYF1 wgs chr1 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr1 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr1 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr1 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr2 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr2 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr2 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr2 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr3 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr3 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr3 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr3 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr4 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr4 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr4 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr4 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr5 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr5 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr5 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr5 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr6 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr6 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr6 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr6 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr7 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr7 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr7 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr7 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr8 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr8 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr8 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr8 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr9 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr9 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr9 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr9 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr10 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr10 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr10 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr10 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr11 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr11 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr11 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr11 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr12 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr12 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr12 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr12 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr13 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr13 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr13 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr13 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr14 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr14 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr14 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr14 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr15 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr15 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr15 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr15 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr16 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr16 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr16 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr16 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr17 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr17 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr17 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr17 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr18 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr18 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr18 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr18 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr19 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr19 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr19 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr19 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr20 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr20 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr20 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr20 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr21 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr21 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr21 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr21 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr22 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr22 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr22 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr22 reg_Only wgs","title":"Looping"},{"location":"tests/looping/#looping","text":"It is a dummy for [wes, wgs] x [1-5 proteins] x [4 groups] x [1-22 chromosomes] combinations as in the rare variant analysis (rva).","title":"Looping"},{"location":"tests/looping/#scripts","text":"#!/usr/bin/bash #SBATCH --job-name=_rva #SBATCH --account=PETERS-SL3-CPU #SBATCH --partition=skylake #SBATCH --cpus-per-task=2 #SBATCH --array=1-5 #SBATCH --mem=18800 #SBATCH --time=12:00:00 #SBATCH --output=/home/jhz22/_rva_%A_%a.o #SBATCH --error=/home/jhz22/_rva_%A_%a.e #SBATCH --export ALL export TMPDIR=${HPC_WORK}/work export SEQ=~/COVID-19/SCALLOP-Seq export COHORT=INTERVAL singularity_exec() { echo ${weswgs} } export groups=(exon_CADD exon_reg exon_severe reg_Only) for weswgs in wes wgs do export pheno=$(ls ${SEQ}/work/${weswgs}/*-lr.pheno | xargs -I {} basename {} -lr.pheno | awk 'NR==ENVIRON[\"SLURM_ARRAY_TASK_ID\"]') export weswgs=${weswgs} for chrs in {1..22} do export chr=chr${chrs} for group in ${groups[@]} do export group_file=${group}-${chrs}.groupfile.txt echo ${pheno} ${weswgs} ${chr} ${group} singularity_exec done done done","title":"scripts"},{"location":"tests/looping/#an-example-list","text":"The _rva*.o files list the combinations as intended, e.g., _rva_46245269_1.o with an empty _rva_46245269_1.e . cvd2_ACE2__Q9BYF1 wes chr1 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr1 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr1 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr1 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr2 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr2 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr2 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr2 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr3 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr3 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr3 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr3 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr4 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr4 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr4 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr4 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr5 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr5 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr5 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr5 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr6 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr6 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr6 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr6 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr7 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr7 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr7 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr7 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr8 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr8 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr8 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr8 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr9 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr9 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr9 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr9 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr10 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr10 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr10 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr10 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr11 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr11 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr11 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr11 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr12 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr12 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr12 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr12 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr13 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr13 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr13 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr13 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr14 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr14 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr14 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr14 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr15 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr15 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr15 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr15 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr16 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr16 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr16 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr16 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr17 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr17 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr17 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr17 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr18 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr18 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr18 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr18 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr19 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr19 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr19 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr19 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr20 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr20 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr20 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr20 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr21 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr21 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr21 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr21 reg_Only wes cvd2_ACE2__Q9BYF1 wes chr22 exon_CADD wes cvd2_ACE2__Q9BYF1 wes chr22 exon_reg wes cvd2_ACE2__Q9BYF1 wes chr22 exon_severe wes cvd2_ACE2__Q9BYF1 wes chr22 reg_Only wes cvd2_ACE2__Q9BYF1 wgs chr1 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr1 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr1 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr1 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr2 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr2 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr2 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr2 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr3 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr3 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr3 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr3 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr4 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr4 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr4 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr4 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr5 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr5 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr5 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr5 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr6 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr6 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr6 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr6 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr7 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr7 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr7 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr7 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr8 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr8 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr8 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr8 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr9 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr9 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr9 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr9 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr10 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr10 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr10 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr10 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr11 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr11 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr11 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr11 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr12 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr12 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr12 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr12 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr13 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr13 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr13 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr13 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr14 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr14 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr14 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr14 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr15 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr15 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr15 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr15 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr16 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr16 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr16 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr16 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr17 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr17 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr17 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr17 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr18 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr18 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr18 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr18 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr19 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr19 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr19 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr19 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr20 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr20 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr20 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr20 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr21 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr21 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr21 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr21 reg_Only wgs cvd2_ACE2__Q9BYF1 wgs chr22 exon_CADD wgs cvd2_ACE2__Q9BYF1 wgs chr22 exon_reg wgs cvd2_ACE2__Q9BYF1 wgs chr22 exon_severe wgs cvd2_ACE2__Q9BYF1 wgs chr22 reg_Only wgs","title":"An example list"},{"location":"tests/no_singularity/","text":"No singularity This is an experiment done without singularity during the analysis of WGS (so no WES here, either) data. #!/usr/bin/bash #SBATCH --job-name=_rva #SBATCH --account=CARDIO-SL0-CPU #SBATCH --partition=cardio #SBATCH --cpus-per-task=9 #SBATCH --qos=cardio #SBATCH --array=1-368 #SBATCH --mem=28800 #SBATCH --time=5-00:00:00 #SBATCH --output=/rds/user/jhz22/hpc-work/work/_rva_%A_%a.o #SBATCH --error=/rds/user/jhz22/hpc-work/work/_rva_%A_%a.e #SBATCH --export ALL export TMPDIR=${HPC_WORK}/work export SEQ=~/COVID-19/SCALLOP-Seq export COHORT=INTERVAL no_singularity_exec() { if [ ! -d ${SEQ}/rva/${weswgs}-${pheno} ]; then mkdir -p ${SEQ}/rva/${weswgs}-${pheno}; fi Rscript ${SEQ}/burden_testing/step2 --cohort-name ${COHORT} \\ --GDS ${SEQ}/work/${weswgs}-${chr}.gds \\ --group-file ${SEQ}/${group_file} \\ --matrix-prefix ${SEQ}/work/${weswgs} \\ --matrix-type GCTA \\ --pheno ${SEQ}/work/${weswgs}/${pheno}-lr.pheno \\ --out ${SEQ}/rva/${weswgs}-${pheno}/${COHORT}-${weswgs}-${pheno}-${group}-${chr} \\ --threads 9 } export groups=(exon_CADD exon_reg exon_severe reg_Only) for weswgs in wgs do export pheno=$(ls ${SEQ}/work/${weswgs}/*-lr.pheno | xargs -I {} basename {} -lr.pheno | awk 'NR==ENVIRON[\"SLURM_ARRAY_TASK_ID\"]') export weswgs=${weswgs} for chrs in {1..22} do export chr=chr${chrs} for group in ${groups[@]} do export group_file=${group}-${chrs}.groupfile.txt echo ${pheno} ${weswgs} ${chr} ${group} no_singularity_exec done done done","title":"No singularity"},{"location":"tests/no_singularity/#no-singularity","text":"This is an experiment done without singularity during the analysis of WGS (so no WES here, either) data. #!/usr/bin/bash #SBATCH --job-name=_rva #SBATCH --account=CARDIO-SL0-CPU #SBATCH --partition=cardio #SBATCH --cpus-per-task=9 #SBATCH --qos=cardio #SBATCH --array=1-368 #SBATCH --mem=28800 #SBATCH --time=5-00:00:00 #SBATCH --output=/rds/user/jhz22/hpc-work/work/_rva_%A_%a.o #SBATCH --error=/rds/user/jhz22/hpc-work/work/_rva_%A_%a.e #SBATCH --export ALL export TMPDIR=${HPC_WORK}/work export SEQ=~/COVID-19/SCALLOP-Seq export COHORT=INTERVAL no_singularity_exec() { if [ ! -d ${SEQ}/rva/${weswgs}-${pheno} ]; then mkdir -p ${SEQ}/rva/${weswgs}-${pheno}; fi Rscript ${SEQ}/burden_testing/step2 --cohort-name ${COHORT} \\ --GDS ${SEQ}/work/${weswgs}-${chr}.gds \\ --group-file ${SEQ}/${group_file} \\ --matrix-prefix ${SEQ}/work/${weswgs} \\ --matrix-type GCTA \\ --pheno ${SEQ}/work/${weswgs}/${pheno}-lr.pheno \\ --out ${SEQ}/rva/${weswgs}-${pheno}/${COHORT}-${weswgs}-${pheno}-${group}-${chr} \\ --threads 9 } export groups=(exon_CADD exon_reg exon_severe reg_Only) for weswgs in wgs do export pheno=$(ls ${SEQ}/work/${weswgs}/*-lr.pheno | xargs -I {} basename {} -lr.pheno | awk 'NR==ENVIRON[\"SLURM_ARRAY_TASK_ID\"]') export weswgs=${weswgs} for chrs in {1..22} do export chr=chr${chrs} for group in ${groups[@]} do export group_file=${group}-${chrs}.groupfile.txt echo ${pheno} ${weswgs} ${chr} ${group} no_singularity_exec done done done","title":"No singularity"}]}